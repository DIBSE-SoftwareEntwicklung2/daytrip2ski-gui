# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
    gcp-gcr: circleci/gcp-gcr@0.15.0
    cloudrun: circleci/gcp-cloud-run@1.0.1
    gcp-cli: circleci/gcp-cli@2.1
    sonarcloud: sonarsource/sonarcloud@1.1.1
    heroku: circleci/heroku@1.2.6
executors:
    gcloud-executor:
        docker:
            - image: google/cloud-sdk
    machine-executor:
        machine: true
jobs:
    build:
        description: Build the Project
        docker:
            - image: sugan1234/vaadinrepo:latest
        environment:
            MAVEN_CLI_OPTS: "--batch-mode"
        steps: 
            - checkout 
            - run: mvn $MAVEN_CLI_OPTS clean package -Pproduction -e 
            - store_artifacts: 
                path: target 
                destination: target 
    test:
        description: Test the Project
        docker: 
            - image: sugan1234/vaadinrepo:latest 
        steps: 
            - checkout 
            - run: mvn test -e 
            - store_artifacts: 
                path: reports 
                destination: reports

    static_code_analysis:
        description: Runs a static code analysis
        docker:
            # replace with your preferred image
            - image: sugan1234/vaadinrepo:latest
        steps:
            - checkout
            - run:
                name: Analyze on SonarCloud
                command: mvn verify sonar:sonar -Dsonar.projectKey=DIBSE-SoftwareEntwicklung2_daytrip2ski-gui

    build_push_image_gcr:
        description: Build docker image and push to gcr registry 
        executor: gcp-gcr/default 
        machine: 
            image: ubuntu-2004:202010-01 
        steps: 
            - checkout
            - run: 
                name: Build app binary and Docker image 
                command: | 
                    echo 'export PATH=~$PATH:~/.local/bin' >> $BASH_ENV 
                    echo $(GCP_PROJECT_KEY) | base64 --decode --ignore-garbage > $HOME/gcloud-service-key.json 
                    echo 'export GOOGLE_CLOUD_KEYS=$(cat $HOME/gcloud-service-key.json)' >> $BASH_ENV 
                    echo 'export TAG=$CIRCLE_SHA1' >> $BASH_ENV 
                    
            - gcp-gcr/gcr-auth 
            
            - gcp-gcr/build-image: 
                dockerfile: Dockerfile 
                google-project-id: GOOGLE_PROJECT_ID 
                image: $CIRCLE_WORKFLOW_ID 
                registry-url: "gcr.io" 
                tag: "latest" 
                
            - gcp-gcr/push-image: 
                google-project-id: GOOGLE_PROJECT_ID 
                image: $CIRCLE_WORKFLOW_ID 
                registry-url: "gcr.io" 
                tag: "latest"

    herokudeploy:
        deploy:
        executor: heroku/default
        docker:
            - image: sugan1234/vaadinrepo:latest
        environment:
            MAVEN_CLI_OPTS: "--batch-mode"
        steps:
            - checkout
            - heroku/install
            - run: mvn $MAVEN_CLI_OPTS clean package -Pproduction -e heroku:deploy
            - run:
                command: >
                    echo "The command above installs Heroku, the command below deploys.
                    What you do inbetween is up to you!"   
            - heroku/deploy-via-git
    gcp_cloudrun_deploy: 
        description: Deploy using cloud run 
        executor: machine-executor 
        steps: 
            - cloudrun/init 
            - cloudrun/deploy: 
                platform: 'managed' 
                image: 'gcr.io/$GOOGLE_PROJECT_ID/$CIRCLE_WORKFLOW_ID' 
                service-name: 'vaadin-ui-service' 
                region: 'europe-west1' 
                unauthenticated: true 
workflows: 
    version: 2
    workflow: 
        jobs: 
        - build 
        - test: 
            requires: 
                - build
        - static_code_analysis:
            context: SonarCloud
            requires: 
                - build
        - build_push_image_gcr:
            requires: 
                - test 
        - gcp_cloudrun_deploy: 
            requires: 
                - build_push_image_gcr
        - herokudeploy:
            requires:
                - test